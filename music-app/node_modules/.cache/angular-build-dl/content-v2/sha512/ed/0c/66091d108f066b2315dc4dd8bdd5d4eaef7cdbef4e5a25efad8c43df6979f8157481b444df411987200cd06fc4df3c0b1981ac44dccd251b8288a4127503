{"version":3,"sources":["./src/app/pages/songs/songs.page.html","./src/app/pages/songs/songs-routing.module.ts","./src/app/pages/songs/songs.module.ts","./src/app/pages/songs/songs.page.scss","./src/app/pages/songs/songs.page.ts","./src/app/services/song.service.ts"],"names":[],"mappings":"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","file":"pages-songs-songs-module-es2015.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"dark\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Songs</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-list>\\r\\n\\r\\n    <ion-item-sliding *ngFor=\\\"let song of songs\\\">\\r\\n      <ion-item>\\r\\n        <ion-label>\\r\\n          {{song.title}}\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item-options side=\\\"start\\\">\\r\\n        <ion-item-option (click)=\\\"updateSong(song.id)\\\" color=\\\"primary\\\">\\r\\n          <ion-icon slot=\\\"start\\\" name=\\\"pencil-outline\\\"></ion-icon>\\r\\n          Edit\\r\\n        </ion-item-option>\\r\\n        <ion-item-option (click)=\\\"deleteSong(song.id)\\\" color=\\\"danger\\\">\\r\\n          <ion-icon slot=\\\"start\\\" name=\\\"trash-outline\\\"></ion-icon>\\r\\n          Delete\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n  \\r\\n  </ion-list>\\r\\n\\r\\n  <!-- fab placed to the bottom end -->\\r\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n    <ion-fab-button color=\\\"danger\\\" (click)=\\\"openCreateSongsPage()\\\">\\r\\n      <ion-icon name=\\\"add-outline\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n  </ion-fab>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SongsPage } from './songs.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SongsPage\r\n  },\r\n  {\r\n    path: 'create-song',\r\n    loadChildren: () => import('./create-song/create-song.module').then( m => m.CreateSongPageModule)\r\n  },\r\n  {\r\n    path: 'create-song/:albumId',\r\n    loadChildren: () => import('./create-song/create-song.module').then( m => m.CreateSongPageModule)\r\n  },\r\n  {\r\n    path: 'edit-song',\r\n    loadChildren: () => import('./edit-song/edit-song.module').then( m => m.EditSongPageModule)\r\n  },\r\n  {\r\n    path: 'edit-song/:songId',\r\n    loadChildren: () => import('./edit-song/edit-song.module').then( m => m.EditSongPageModule)\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SongsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SongsPageRoutingModule } from './songs-routing.module';\r\n\r\nimport { SongsPage } from './songs.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SongsPageRoutingModule\r\n  ],\r\n  declarations: [SongsPage]\r\n})\r\nexport class SongsPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NvbmdzL3NvbmdzLnBhZ2Uuc2NzcyJ9 */\"","import { ToastController } from '@ionic/angular';\r\nimport { SongService } from './../../services/song.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Key } from 'protractor';\r\n\r\n@Component({\r\n  selector: 'app-songs',\r\n  templateUrl: './songs.page.html',\r\n  styleUrls: ['./songs.page.scss'],\r\n})\r\nexport class SongsPage implements OnInit {\r\n\r\n  private albumId;\r\n\r\n  toast: any;\r\n\r\n  private response: any = {\r\n    entity: {},\r\n    status: '',\r\n    responseText: ''\r\n  }\r\n\r\n  songs: any = []; // lint\r\n\r\n  constructor(private route: ActivatedRoute, private songApi: SongService, private router: Router, private toastCtrl: ToastController) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n   this.albumId = this.route.snapshot.paramMap.get('albumId');\r\n   this.songApi.getAllsongsByAlbum(this.albumId).subscribe(\r\n     res => {\r\n       this.songs = res;\r\n       console.log(this.songs);\r\n     }\r\n   );\r\n  }\r\n\r\n  openCreateSongsPage() {\r\n    this.router.navigateByUrl('/songs/create-song/' + this.albumId);\r\n  }\r\n\r\n  updateSong(songId) {\r\n    this.router.navigateByUrl('/songs/edit-song/' + songId);\r\n  }\r\n\r\n  deleteSong(songId){\r\n    this.songApi.deleteSongById(songId).subscribe(\r\n      res => {\r\n        this.response = res;\r\n        console.log(this.response);\r\n        if(this.response.status == \"SUCCESS\"){ \r\n          this.successToast(this.response.responseText);\r\n          this.ionViewWillEnter();\r\n        }else{\r\n          this.errorToast(this.response.responseText);\r\n        }\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  successToast(msg) {\r\n    this.toast = this.toastCtrl.create(\r\n      {\r\n        message: msg,\r\n        duration: 2000,\r\n        color: 'success'\r\n      }\r\n    ).then(toastData => {\r\n      toastData.present();\r\n    });\r\n  }\r\n\r\n  errorToast(msg) {\r\n    this.toast = this.toastCtrl.create(\r\n      {\r\n        message: msg,\r\n        duration: 2000,\r\n        color: 'danger'\r\n      }\r\n    ).then(toastData => {\r\n      toastData.present();\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SongService {\r\n\r\n  private uri = 'http://localhost:8080/api/v1/song';\r\n\r\n  header = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllsongsByAlbum(albumId) {\r\n    return this.http.get(this.uri + '/album/' + albumId);\r\n  }\r\n\r\n  saveSong(song){\r\n    return this.http.post(this.uri, JSON.stringify(song), this.header);\r\n  }\r\n\r\n  deleteSongById(songId){\r\n    return this.http.delete(this.uri + '/' + songId);\r\n  }\r\n\r\n  findById(songId) {\r\n    return this.http.get(this.uri + '/' + songId);\r\n  }\r\n\r\n  update(song) {\r\n    return this.http.put(this.uri, JSON.stringify(song), this.header);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}