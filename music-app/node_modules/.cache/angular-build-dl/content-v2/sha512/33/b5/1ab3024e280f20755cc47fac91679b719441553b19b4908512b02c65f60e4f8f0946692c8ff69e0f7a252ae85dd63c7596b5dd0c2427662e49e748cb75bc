{"version":3,"sources":["src/app/pages/songs/songs.page.html","src/app/pages/songs/songs-routing.module.ts","src/app/pages/songs/songs.module.ts","src/app/pages/songs/songs.page.scss","src/app/pages/songs/songs.page.ts","src/app/services/song.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"dark\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Songs</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-list>\\r\\n\\r\\n    <ion-item-sliding *ngFor=\\\"let song of songs\\\">\\r\\n      <ion-item>\\r\\n        <ion-label>\\r\\n          {{song.title}}\\r\\n        </ion-label>\\r\\n      </ion-item>\\r\\n      <ion-item-options side=\\\"start\\\">\\r\\n        <ion-item-option (click)=\\\"updateSong(song.id)\\\" color=\\\"primary\\\">\\r\\n          <ion-icon slot=\\\"start\\\" name=\\\"pencil-outline\\\"></ion-icon>\\r\\n          Edit\\r\\n        </ion-item-option>\\r\\n        <ion-item-option (click)=\\\"deleteSong(song.id)\\\" color=\\\"danger\\\">\\r\\n          <ion-icon slot=\\\"start\\\" name=\\\"trash-outline\\\"></ion-icon>\\r\\n          Delete\\r\\n        </ion-item-option>\\r\\n      </ion-item-options>\\r\\n    </ion-item-sliding>\\r\\n  \\r\\n  </ion-list>\\r\\n\\r\\n  <!-- fab placed to the bottom end -->\\r\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n    <ion-fab-button color=\\\"danger\\\" (click)=\\\"openCreateSongsPage()\\\">\\r\\n      <ion-icon name=\\\"add-outline\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n  </ion-fab>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SongsPage } from './songs.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SongsPage\r\n  },\r\n  {\r\n    path: 'create-song',\r\n    loadChildren: () => import('./create-song/create-song.module').then( m => m.CreateSongPageModule)\r\n  },\r\n  {\r\n    path: 'create-song/:albumId',\r\n    loadChildren: () => import('./create-song/create-song.module').then( m => m.CreateSongPageModule)\r\n  },\r\n  {\r\n    path: 'edit-song',\r\n    loadChildren: () => import('./edit-song/edit-song.module').then( m => m.EditSongPageModule)\r\n  },\r\n  {\r\n    path: 'edit-song/:songId',\r\n    loadChildren: () => import('./edit-song/edit-song.module').then( m => m.EditSongPageModule)\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SongsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { SongsPageRoutingModule } from './songs-routing.module';\r\n\r\nimport { SongsPage } from './songs.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    SongsPageRoutingModule\r\n  ],\r\n  declarations: [SongsPage]\r\n})\r\nexport class SongsPageModule {}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NvbmdzL3NvbmdzLnBhZ2Uuc2NzcyJ9 */\"","import { ToastController } from '@ionic/angular';\r\nimport { SongService } from './../../services/song.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Key } from 'protractor';\r\n\r\n@Component({\r\n  selector: 'app-songs',\r\n  templateUrl: './songs.page.html',\r\n  styleUrls: ['./songs.page.scss'],\r\n})\r\nexport class SongsPage implements OnInit {\r\n\r\n  private albumId;\r\n\r\n  toast: any;\r\n\r\n  private response: any = {\r\n    entity: {},\r\n    status: '',\r\n    responseText: ''\r\n  }\r\n\r\n  songs: any = []; // lint\r\n\r\n  constructor(private route: ActivatedRoute, private songApi: SongService, private router: Router, private toastCtrl: ToastController) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n   this.albumId = this.route.snapshot.paramMap.get('albumId');\r\n   this.songApi.getAllsongsByAlbum(this.albumId).subscribe(\r\n     res => {\r\n       this.songs = res;\r\n       console.log(this.songs);\r\n     }\r\n   );\r\n  }\r\n\r\n  openCreateSongsPage() {\r\n    this.router.navigateByUrl('/songs/create-song/' + this.albumId);\r\n  }\r\n\r\n  updateSong(songId) {\r\n    this.router.navigateByUrl('/songs/edit-song/' + songId);\r\n  }\r\n\r\n  deleteSong(songId){\r\n    this.songApi.deleteSongById(songId).subscribe(\r\n      res => {\r\n        this.response = res;\r\n        console.log(this.response);\r\n        if(this.response.status == \"SUCCESS\"){ \r\n          this.successToast(this.response.responseText);\r\n          this.ionViewWillEnter();\r\n        }else{\r\n          this.errorToast(this.response.responseText);\r\n        }\r\n\r\n      }\r\n    );\r\n  }\r\n\r\n  successToast(msg) {\r\n    this.toast = this.toastCtrl.create(\r\n      {\r\n        message: msg,\r\n        duration: 2000,\r\n        color: 'success'\r\n      }\r\n    ).then(toastData => {\r\n      toastData.present();\r\n    });\r\n  }\r\n\r\n  errorToast(msg) {\r\n    this.toast = this.toastCtrl.create(\r\n      {\r\n        message: msg,\r\n        duration: 2000,\r\n        color: 'danger'\r\n      }\r\n    ).then(toastData => {\r\n      toastData.present();\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SongService {\r\n\r\n  private uri = 'http://localhost:8080/api/v1/song';\r\n\r\n  header = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllsongsByAlbum(albumId) {\r\n    return this.http.get(this.uri + '/album/' + albumId);\r\n  }\r\n\r\n  saveSong(song){\r\n    return this.http.post(this.uri, JSON.stringify(song), this.header);\r\n  }\r\n\r\n  deleteSongById(songId){\r\n    return this.http.delete(this.uri + '/' + songId);\r\n  }\r\n\r\n  findById(songId) {\r\n    return this.http.get(this.uri + '/' + songId);\r\n  }\r\n\r\n  update(song) {\r\n    return this.http.put(this.uri, JSON.stringify(song), this.header);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///","file":"pages-songs-songs-module-es5.js"}